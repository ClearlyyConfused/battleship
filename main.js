(()=>{"use strict";class r{constructor(){this.boardArray=[["","","","","",""],["","","","","",""],["","","","","",""],["","","","","",""],["","","","","",""],["","","","","",""]],this.gameStatus=!0}addShip(r,t,a,o){if("h"===o){let o=0;for(;o<r;){if(""!==this.boardArray[t][a+o])return"Error, cannot place here!";o+=1}for(o=0;o<r;)this.boardArray[t][a+o]="o",o+=1}if("v"===o){let o=0;for(;o<r;){if(""!==this.boardArray[t+o][a])return"Error, cannot place here!";o+=1}for(o=0;o<r;)this.boardArray[t+o][a]="o",o+=1}}fireAt(r,t){"o"===this.boardArray[r][t]?this.boardArray[r][t]="x":this.boardArray[r][t]="m",this.checkWin()}checkWin(){for(const r of this.boardArray)for(const t of r)if("o"===t)return;this.gameStatus=!1}resetBoard(){this.boardArray=[["","","","","",""],["","","","","",""],["","","","","",""],["","","","","",""],["","","","","",""],["","","","","",""]]}}(new class{constructor(){this.player1Board=new r,this.player2Board=new r}startGame(){let r=0;for(;r<2;){let t=prompt("What is the row?"),a=prompt("What is a column?"),o=prompt("What is a orientation?");this.player1Board.addShip(r,t,a,o),r+=1}for(r=0;r<2;){let t=prompt("What is the row?"),a=prompt("What is a column?"),o=prompt("What is a orientation?");this.player2Board.addShip(r,t,a,o),r+=1}this.gameState()}gameState(){let r,t;for(;"false"!==this.player1Board.gameStatus||"false"!==this.player2Board.gameStatus;)r=prompt("What is the row?"),t=prompt("What is a column?"),this.player1Board.fireAt(r,t)}resetGame(){this.player1Board.resetBoard(),this.player2Board.resetBoard()}}).startGame()})();